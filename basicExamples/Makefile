# 변수 설정: CC는 컴파일러를 의미하며, CFLAGS는 컴파일 옵션을 설정합니다. -Wall은 모든 경고를 표시하고, -g는 디버깅 정보를 포함시킵니다.
# 패턴 규칙: 첫 번째 패턴 규칙 %: %.c는 모든 타겟(예: s9-1.ioAgeName)에 대해 같은 이름의 .c 파일(예: s9-1.ioAgeName.c)을 컴파일하여 실행 파일을 생성합니다.
# 쉘 스크립트 규칙: 두 번째 패턴 규칙은 사용자가 make에 특정 패턴을 제공했을 때(예: make s9-1) 사용됩니다. 이 규칙은 주어진 패턴으로 시작하는 모든 .c 파일을 찾아서 각각에 대해 make를 호출합니다. 파일 이름에서 .c 확장자를 제거하여 실행 파일 이름을 생성합니다.

CC = gcc
CFLAGS = -Wall -g

# 패턴 매칭을 사용하여 입력된 시작 패턴에 따라 .c 파일을 찾고, 실행 파일 이름을 설정
%: %.c
	$(CC) $(CFLAGS) $< -o $@

# 사용자가 특정 패턴을 지정하면 해당 패턴을 시작으로 하는 모든 .c 파일에 대한 목표를 생성
%:
	@set -e; \
	for file in $@*.c; do \
		if [ -f "$$file" ]; then \
			target=`echo $$file | sed 's/\.c$$//'`; \
			$(MAKE) $$target; \
		fi \
	done
